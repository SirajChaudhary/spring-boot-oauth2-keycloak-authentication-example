# ==============================
# Application Configuration
# ==============================
spring.application.name=spring-boot-oauth2-keycloak-authentication-example
server.port=8081

# ==============================
# Keycloak OIDC Client Configuration
# (Spring Security will use these to handle login)
# ==============================
spring.security.oauth2.client.registration.keycloak.client-id=spring-app
# Important: Replace with the client secret from Keycloak (Clients ? spring-app ? Credentials)
spring.security.oauth2.client.registration.keycloak.client-secret=948RwGxFZ5nNZj5DVvCUx6QpgRgTrf5B
spring.security.oauth2.client.registration.keycloak.client-name=Keycloak
spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email

# Keycloak provider configuration
# Spring Boot will automatically discover token endpoint, userinfo endpoint, and JWKS for JWT validation
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/demo

# ==============================
# Resource Server Configuration
# (Validate incoming JWTs using issuer-uri)
# ==============================
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/demo

# ==============================
# OpenAPI / Swagger Configuration
# ==============================
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
